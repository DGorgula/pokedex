{"version":3,"sources":["components/PokeFilter.js","components/Pokemon.js","components/CatchedPokemons.js","App.js","reportWebVitals.js","index.js"],"names":["PokeFilter","changeValue","getPokemonData","value","id","placeholder","type","onKeyPress","target","charCode","onChange","onClick","class","Pokemon","pokeDataForState","spreadTypes","pokemonTypeList","catchOrRelease","catchButton","catchState","setFrontImage","image","setImage","frontImage","backImage","className","pokeName","pokeTypes","pokeHeight","pokeWeight","onMouseOver","onMouseLeave","style","width","height","backgroundSize","backgroundRepeat","backgroundImage","pokeId","imgAndButton","pokemonUgly","CatchedPokemons","catchedPokemons","catchedPokemonList","setCatchedPokemons","WebcamComponent","App","useState","setpokemonTypeList","setValue","setCatchState","setCatchButton","setType","setpokemonUgly","axios","get","then","data","console","log","catchedPokemonsElements","map","pokemon","src","pokeFrontImage","setPokeDataForState","toLowerCase","pokeCatchedButton","catch","error","message","e","newValue","types","index","i","showTypePokemons","pokemonName","post","name","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b331bec9.chunk.js","sourcesContent":["import React from 'react'\n\nconst PokeFilter = ({ changeValue, getPokemonData, value }) => {\n    const handleKeyPress = (target) => {\n        if (target.charCode == 13) {\n            getPokemonData(value);\n        }\n    }\n    return (\n        <div id=\"filter-div\">\n            <input id=\"filter\" placeholder=\"Enter a Pokemon\" type='text' onKeyPress={handleKeyPress} onChange={changeValue} />\n            <div id=\"filter-button\" onClick={() => { getPokemonData(value) }}><i class=\"fas fa-search\"></i></div>\n\n        </div >\n    )\n}\n\nexport default PokeFilter","import React, { useState, useEffect } from 'react'\nimport \"../pokemonType.css\"\nconst Pokemon = ({ pokeDataForState, pokemonTypeList, spreadTypes, catchOrRelease, catchState, catchButton, setFrontImage, image, setImage }) => {\n\n    if (pokeDataForState.frontImage) {\n        setFrontImage(setImage, image, pokeDataForState.frontImage, pokeDataForState.backImage);\n    }\n    function getImage() {\n\n        if (pokeDataForState.pokeName === \"pokeugly\") {\n            return \"\"\n        }\n        return image || pokeDataForState.frontImage\n\n    }\n\n    function imgAndButton() {\n        if (pokeDataForState.pokeName === \"pokeugly\") {\n            return\n        }\n        return (\n            <>\n                <div className=\"main-image\" onMouseOver={() => setImage(pokeDataForState.backImage)} onMouseLeave={() => setImage(pokeDataForState.frontImage)} style={{\n                    width: '200px', height: \"200px\", backgroundSize: \"200px\", backgroundRepeat: 'no-repeat', backgroundImage: `url(\"${getImage()}\")`\n                }} >\n                    <button className=\"catch-release\" onClick={() => { catchOrRelease(pokeDataForState.pokeName, catchButton, pokeDataForState.pokeId) }}>{catchButton}</button>\n                </div>\n\n            </>)\n    }\n\n\n\n\n\n    return (\n        <>\n            <div id=\"main-data\">\n                <div className=\"stats\">\n                    <div id=\"properties\">\n                        <p id=\"name\" className=\"property\"><strong>Name:</strong></p>\n                        <p id=\"types\" className=\"property\"><strong>Types:</strong></p>\n                        <p id=\"height\" className=\"property\"><strong>Height:</strong></p>\n                        <p id=\"weight\" className=\"property\"><strong>Weight:</strong></p>\n                    </div>\n                    <div id=\"values\">\n                        <p id=\"name-value\" className=\"property\">{pokeDataForState.pokeName}</p>\n                        <p id=\"types-value\" className=\"property\">\n                            {spreadTypes(pokeDataForState.pokeTypes)}\n                        </p>\n                        <p id=\"height-value\" className=\"property\">{pokeDataForState.pokeHeight ? pokeDataForState.pokeHeight + \"in\" : \"\"}</p>\n                        <p id=\"weight-value\" className=\"property\">{pokeDataForState.pokeWeight ? pokeDataForState.pokeWeight + \"Kg\" : \"\"}</p>\n                    </div>\n                </div>\n                {imgAndButton()}\n                <div>\n                    {pokeDataForState.pokemonUgly ? pokeDataForState.pokemonUgly : ''}\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport default Pokemon\n","import React from 'react';\n\nconst CatchedPokemons = ({ catchedPokemons, catchedPokemonList, setCatchedPokemons }) => {\n\n    // const catchedPokemonsElements = catchedPokemons.map()\n    return (\n        <div className=\"collection\">\n            {catchedPokemons ? catchedPokemons : catchedPokemonList(setCatchedPokemons)}\n        </div>\n    )\n}\n\nexport default CatchedPokemons;\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport PokeFilter from './components/PokeFilter';\nimport Pokemon from './components/Pokemon';\nimport CatchedPokemons from './components/CatchedPokemons';\nimport Webcam from \"react-webcam\";\nconst WebcamComponent = () => <Webcam className=\"webcam\" />;\n\nfunction App() {\n  const [pokemonTypeList, setpokemonTypeList] = useState('');\n  const [value, setValue] = useState('')\n  const [catchState, setCatchState] = useState([]);\n  const [catchedPokemons, setCatchedPokemons] = useState(catchedPokemonList());\n  const [catchButton, setCatchButton] = useState('catch');\n  const [type, setType] = useState('');\n  const [pokemonUgly, setpokemonUgly] = useState(WebcamComponent)\n  function catchedPokemonList(setCatchedPokemons) {\n    axios.get(`/api/collection`).then(({ data }) => {\n      console.log(data);\n      const catchedPokemonsElements = data.map(pokemon => {\n        return (\n          <img className=\"catched-pokemon\" src={pokemon.pokeFrontImage} onClick={() => getPokemonData(pokemon.pokeName)} />\n        )\n      })\n      if (setCatchedPokemons) {\n        setCatchedPokemons(catchedPokemonsElements);\n        return;\n      }\n      return catchedPokemonsElements;\n    })\n  }\n\n  function catchOrRelease(pokemonName, catchButton, pokeId) {\n    console.log(pokemonName);\n    if (catchButton === 'catch') {\n\n      axios.post(`/api/collection/catch`, { name: pokemonName })\n        .then(({ data }) => {\n          console.log(data);\n          setCatchButton(data.pokeCatchedButton);\n          catchedPokemonList(setCatchedPokemons);\n          console.log(catchedPokemons);\n        })\n        .catch(error => {\n          console.log(\"EROR\", error)\n\n          console.log(error)\n            ;\n        });\n    }\n    else {\n      axios.delete(`/api/collection/release/${pokeId}`, { name: pokemonName }).then((data) => {\n        setCatchButton(\"catch\");\n        catchedPokemonList(setCatchedPokemons);\n        console.log(catchedPokemons);\n      })\n    }\n  }\n\n  const changeValue = (e) => {\n    const newValue = e.target.value;\n    setValue(newValue)\n  }\n  const firstpokeDataForState = { pokeName: '', pokeTypes: '', pokeHeight: '', pokeWeight: '' };\n  const [pokeDataForState, setPokeDataForState] = useState(firstpokeDataForState);\n\n  const getPokemonData = (value) => {\n    setpokemonTypeList('')\n    setType('');\n    if (!value) {\n      return;\n    }\n    const pokeName = value.toLowerCase();\n    axios.get(`/api/pokemon/${pokeName}`)\n      .then(({ data }) => {\n        console.log(data);\n        setCatchButton(data.pokeCatchedButton);\n        if (data.pokeName === \"pokeugly\") {\n          setImage('');\n          setpokemonUgly(WebcamComponent)\n          data[\"pokemonUgly\"] = pokemonUgly;\n        } else {\n          data[\"pokemonUgly\"] = \"\";\n\n        }\n        console.log(data)\n        setPokeDataForState(data);\n      })\n      .catch(error => {\n        console.log(error)\n        if (error.message === \"Request failed with status code 404\"\n        ) {\n          return\n        }\n\n      });\n  }\n\n  const [image, setImage] = useState(pokeDataForState.frontImage);\n\n  function setFrontImage(setImage, image, frontImage, backImage) {\n    if (image !== frontImage && image !== backImage) {\n      setImage(frontImage);\n    }\n  }\n\n  function getPokemonImage(pokeName) {\n    console.log(\"pokeName: \", pokeName);\n    axios.get(`/api/image/${pokeName}`, { pokeName: pokeName })\n      .then(({ data }) => {\n        console.log(\"DATA: \", data);\n      });\n  }\n\n  function showTypePokemons(type) {\n    axios.get(`/api/${type}`).then(({ data }) => {\n      console.log(data);\n      const pokemonTypeList = data.map((pokemon, i) => {\n        return (<li key={i} className={\"pokemon\"}>\n          <img key={i} className=\"pokemon-image\" src={pokemon.frontImage} onClick={() => getPokemonData(pokemon.pokeName)} /></li>)\n      })\n      setpokemonTypeList(pokemonTypeList);\n    })\n      .catch((error) => { console.log(\"There was an error\", error); })\n  }\n  function spreadTypes(types) {\n    if (!types) {\n      return;\n    }\n    const spans = types.map((type, index) => {\n      return <span className={\"type \" + type} onClick={() => { showTypePokemons(type); setType(type) }} key={index}>{type}</span>\n    });\n\n    return spans;\n  }\n  return (\n    <div className=\"App\">\n      <h1 id=\"title\">Pokedex</h1>\n      <PokeFilter changeValue={changeValue} getPokemonData={getPokemonData} value={value} />\n      <Pokemon setpokemonUgly={setpokemonUgly} pokemonUgly={pokemonUgly} pokeDataForState={pokeDataForState} pokemonTypeList={pokemonTypeList} spreadTypes={spreadTypes} catchOrRelease={catchOrRelease} catchButton={catchButton} setCatchButton={setCatchButton} setImage={setImage} image={image} setFrontImage={setFrontImage} />\n      <CatchedPokemons catchedPokemons={catchedPokemons} setCatchedPokemons={setCatchedPokemons} setCatchState={setCatchState} catchState={catchState} catchedPokemonList={catchedPokemonList} />\n      {console.log(pokemonTypeList)}\n      <ul id=\"type-list\" className={type}>\n        <h2 id=\"type-list-title\">more {type} pokemons:</h2>\n        {pokemonTypeList}\n      </ul>\n\n    </div>\n  );\n\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}